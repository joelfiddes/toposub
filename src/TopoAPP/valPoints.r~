#Requirements:
spath='/home/joel/src/hobbes/results4/b8'
#demLoc='/home/joel/src/hobbes/results/b10/box10/preds/ele.tif'
dat=read.table('/home/joel/data/PERMOS/sites_completeMeta.txt', sep=',', header=T)
names(dat)[4]<-'ele'
names(dat)[7]<-'slp'
names(dat)[8]<-'asp'
names(dat)[9]<-'svf'
dat$aspC<-cos(dat$asp*(pi/180))
dat$aspS<-sin(dat$asp*(pi/180))
predNames<-c('ele', 'slp', 'svf', 'aspC', 'aspS')
Nclust=100
esPath=spath
data<-dat
fuzzy.e=1.4

#read in sample centroid data
samp_mean <- read.table(paste(spath, '/samp_mean.txt' ,sep=''), sep=',',header=T)
samp_sd <- read.table(paste(spath, '/samp_sd.txt' ,sep=''), sep=',', header=T)





#validate points
valPoints <- function(esPath,predNames,data, samp_mean, samp_sd, Nclust,fuzzy.e){

#create dir for rasters (fuzzy membership)
	rstdir<-paste(esPath, '/pointsVal', sep='')
	dir.create(rstdir)
	
initdf=c()
	#calc distances/ write rasters for n clusters
	for(c in (1:Nclust)){
		distmaps <- as.list(seq(1:Nclust))
		tmp <- rep(NA, cells)
		distsum <- data.frame(tmp)
		distmaps[[c]] <- data.frame(ele=tmp,slp=tmp, aspC=tmp,aspS=tmp, svf=tmp)
		
		for(j in predNames){
			distmaps[[c]][j] <- (((data[j]-samp_mean[c,j])/samp_sd[c,j])^2)
			
		}
		sqrt(rowSums(distmaps[[c]], na.rm=T, dims=1))->n#v
		initdf=cbind(initdf,n)
	}

initdf2=c()	
for(c in (1:Nclust)){
		tot<- (initdf[,c]^(-2/(fuzzy.e-1)))
		initdf2=cbind(initdf2,tot)
	}
totsum=rowSums(initdf2)

memMat=c()
	#calc membership stack
	for(c in (1:Nclust)){
		x <- (initdf[,c]^(-2/(fuzzy.e-1))/totsum)
		memMat=cbind(memMat,x)
	}


#Calculate fuzzy values based sample results and fuzzy mem
dat=read.table('/home/joel/src/hobbes/results/b10/box10/meanX_X100.000000.txt', sep=',', header=F)
fuzRes=colSums(dat$V1*t(memMat))




