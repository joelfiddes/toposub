#requires 3hr data as input starting  1-0ct 00:00
# applys to single years 1-0ct 00:00 - 31-Sept 21:00 
# lotsof hardwired things - BEWARE
#computes MD for all simulated poits
# calculates valid points in box and based on level of missingness

#
max.mis=1000 #levels of missingness in algorithm data not tolerated (single year) - bear in mind 17520 IMIS measurments/year 
misthrsh=0.3
#scfvec=c(0.5,0.75,1,1.25,1.5)
scfvec=c(0.2,0.4,0.6,0.8,1,1.2,1.4,1.6,1.8)
start=210385 #175297
box=7
nsim=8
meanBiasVec=c()

for (scf in scfvec){

box1=paste(box, scf,sep='_') #'7_0.2' #identifies parameter experiment dir
box2=box 			#for segmenting shp

 # levels of missingness in raw data > than misthrsh not tolerated (multi year)
#============================================================================
#		MELT DATES OF MODELLED DATA
#============================================================================
source('/home/joel/src/hobbes/src/TopoAPP/pBiasCorr.R')

stationvec=c()
for (sim in 1: nsim){
df=read.table(paste('/home/joel/src/hobbes/results_points2/sim/box',box1,'/sim',sim,'/out/ground.txt',sep=''),sep=',',header=T)
dat=df$X100.000000
#get start point of each year
date=df$Date12.DDMMYYYYhhmm.
day=substr(date,1,2)
month=substr(date,4,5)
year=substr(date,7,10)
hr=substr(date,12,13)
date_format=paste(month,day,hr,sep='/') #mm/dd/hh identifies first and last sub-daily measurment in year (3h step)
yearStart=which(date_format=='10/01/00')
yearEnd=which(date_format=='09/30/21')



print(i)
#year loop
yearvec=c()

#year loop
for (i in 1:length(yearEnd)){
date_cut=date[yearStart[i]:yearEnd[i]]
dat_cut1=dat[yearStart[i]:yearEnd[i]]

if(mean(dat_cut1)<1){md=NA}
if(mean(dat_cut1)>=1){md=meltDate(dat=dat_cut1 ,date=date_cut, numeric=T)}
print(md)
yearvec=c(yearvec,md)
}
stationvec=cbind(stationvec, yearvec)
}

meltDateMod=data.frame(stationvec)
#names(meltDateDf)<-validStations


#============================================================================
#		ID's of MODELLED DATA
#============================================================================
require(raster)
#spath='/home/joel/src/hobbes/results_points/b8/'
points_shp=shapefile('/home/joel/data/shapefiles/imisUTM.shp')
cp=shapefile('/home/joel/data/shapefiles/eraDomainUTM32.shp')
mf='/home/joel/data/transformedData/IMIS_meta.txt'

## shapefile of val points
dat_cut=points_shp[cp[box2,],]
dat_cut_id=dat_cut$ID
mf=read.table(mf, sep=',', header=TRUE)
mf_cut=mf[dat_cut_id,]
mf_cut$id# change id from 1:n

names(meltDateMod)<-mf_cut$id
#mdm=rowMeans(meltDateMod)
#meanBiasVec=cbind(meanBiasVec,mdm)
#}
#============================================================================
#		MELT DATES OF IMIS OBSERVATIONS
#============================================================================

require(raster)
#master='/home/joel/src/hobbes/_master/'
#spath='/home/joel/src/hobbes/results_points/b8/'
points_shp=shapefile('/home/joel/data/shapefiles/imisUTM.shp')
cp=shapefile('/home/joel/data/shapefiles/eraDomainUTM32.shp')

mf='/home/joel/data/transformedData/IMIS_meta.txt'

## shapefile of val points
dat_cut=points_shp[cp[box2,],]
dat_cut_id=dat_cut$ID
mf=read.table(mf, sep=',', header=TRUE)
mf_cut=mf[dat_cut_id,]

#get and cut data to points in box
require(ncdf)
nc=open.ncdf('/home/joel/data/imis/data/imis_data.nc')
dat_all=get.var.ncdf(nc,var='GST')
dat_all[dat_all>1000]<-NA

#Time crop - need to generalise


#missingness
miss=c()
for (i in 1:161){
n=length(which(is.na(dat_all[i,])==T))/(length(dat_all[i,]))
miss=c(miss,n)
}
missvec=which(miss>misthrsh)

mf_cut$id[mf_cut$id %in% missvec==T]<-NA
validStations=na.omit(mf_cut$id)
dat=dat_all[validStations,]

#time
time=get.var.ncdf(nc,var='time')
origin=substr(nc$dim$time$units,15,22)
datesPl<-ISOdatetime(origin,0,0,0,0,0,tz='UTC') + time #dates sequence

dat=dat[,start: length(dat[1,])
]
datesPl=datesPl[start: length(datesPl)]

#get start point of each year
day=substr(datesPl,9,10)
month=substr(datesPl,6,7)
year=substr(datesPl,1,4)
hr=substr(datesPl,12,13)
min=substr(datesPl,15,16)
date_format=paste(month,day,hr,min,sep='/') #mm/dd/hh identifies first and last sub-daily measurment in year (3h step)
yearStart=which(date_format=='10/01/00/00')
yearEnd=which(date_format=='09/30/23/30')

#format date 'GEOtop'

dates_gt=paste(day,month,year,hr,min,sep='/') 

stationvec=c()
for (stn in 1: length(validStations)){

print(i)
#year loop
yearvec=c()
for (i in 1:length(yearEnd)){
date_cut=dates_gt[yearStart[i]:yearEnd[i]]
dat_cut2=dat[stn,yearStart[i]:yearEnd[i]]
md=meltDate(dat=dat_cut2 ,date=date_cut, numeric=T,max.mis=max.mis)
print(md)
yearvec=c(yearvec,md)
}
stationvec=cbind(stationvec, yearvec)
}

meltDateObs=data.frame(stationvec)
names(meltDateObs)<-validStations


#================================
#Analyse

#used to convert to commom timestep
obsres=0.5
modres=3
obsNam=names(meltDateObs)
modNam=names(meltDateMod)

#obsNam ALWAYS a subset of modNam
modNamIndex=which(modNam %in% obsNam)
dbdf=c()
for (i in 1:length(validStations)){
mi=modNamIndex[i]
mdobs=meltDateObs[,i]*obsres
mdmod=meltDateMod[,mi]*modres
dayBias=(mdmod-mdobs)/24
dbdf=cbind(dbdf, dayBias)

}
dayBiasDf=data.frame(dbdf)
names(dayBiasDf)<-paste('S',validStations,sep='')
#OR

meanBias=rowMeans(dayBiasDf,na.rm=T)
meanBiasVec=cbind(meanBiasVec, meanBias)
}

#names(meanBiasVec)<-scfvec


cmb=colMeans(meanBiasVec, na.rm=T)
plot(scfvec,cmb)

scf=approx(cmb,scfvec, xout=0)
scf$y
